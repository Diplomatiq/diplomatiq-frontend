/* tslint:disable */
/* eslint-disable */
/**
 * Diplomatiq API
 * This is the OpenAPI documentation of the Diplomatiq API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PasswordAuthenticationCompleteV1Request
 */
export interface PasswordAuthenticationCompleteV1Request {
    /**
     * The email address of the user
     * @type {string}
     * @memberof PasswordAuthenticationCompleteV1Request
     */
    emailAddress: string;
    /**
     * The SRP client ephemeral (A) as a Hex string
     * @type {string}
     * @memberof PasswordAuthenticationCompleteV1Request
     */
    clientEphemeralHex: string;
    /**
     * The SRP client proof (M1) as a Hex string
     * @type {string}
     * @memberof PasswordAuthenticationCompleteV1Request
     */
    clientProofHex: string;
    /**
     * The SRP server ephemeral (B) received previously, as a Hex string
     * @type {string}
     * @memberof PasswordAuthenticationCompleteV1Request
     */
    serverEphemeralHex: string;
}

export function PasswordAuthenticationCompleteV1RequestFromJSON(json: any): PasswordAuthenticationCompleteV1Request {
    return PasswordAuthenticationCompleteV1RequestFromJSONTyped(json, false);
}

export function PasswordAuthenticationCompleteV1RequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PasswordAuthenticationCompleteV1Request {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'emailAddress': json['emailAddress'],
        'clientEphemeralHex': json['clientEphemeralHex'],
        'clientProofHex': json['clientProofHex'],
        'serverEphemeralHex': json['serverEphemeralHex'],
    };
}

export function PasswordAuthenticationCompleteV1RequestToJSON(value?: PasswordAuthenticationCompleteV1Request | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'emailAddress': value.emailAddress,
        'clientEphemeralHex': value.clientEphemeralHex,
        'clientProofHex': value.clientProofHex,
        'serverEphemeralHex': value.serverEphemeralHex,
    };
}


