/* tslint:disable */
/* eslint-disable */
/**
 * Diplomatiq API
 * This is the OpenAPI documentation of the Diplomatiq API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SeatWithDelegate,
    SeatWithDelegateFromJSON,
    SeatWithDelegateFromJSONTyped,
    SeatWithDelegateToJSON,
} from './';

/**
 * 
 * @export
 * @interface CommitteeWithSeatsWithDelegate
 */
export interface CommitteeWithSeatsWithDelegate {
    /**
     * The name of the committee
     * @type {string}
     * @memberof CommitteeWithSeatsWithDelegate
     */
    name: string;
    /**
     * The code name of the committee
     * @type {string}
     * @memberof CommitteeWithSeatsWithDelegate
     */
    codeName: string;
    /**
     * The list of seats (represented countries) with the representing delegate
     * @type {Array<SeatWithDelegate>}
     * @memberof CommitteeWithSeatsWithDelegate
     */
    seatsWithDelegate: Array<SeatWithDelegate>;
}

export function CommitteeWithSeatsWithDelegateFromJSON(json: any): CommitteeWithSeatsWithDelegate {
    return CommitteeWithSeatsWithDelegateFromJSONTyped(json, false);
}

export function CommitteeWithSeatsWithDelegateFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommitteeWithSeatsWithDelegate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'codeName': json['codeName'],
        'seatsWithDelegate': ((json['seatsWithDelegate'] as Array<any>).map(SeatWithDelegateFromJSON)),
    };
}

export function CommitteeWithSeatsWithDelegateToJSON(value?: CommitteeWithSeatsWithDelegate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'codeName': value.codeName,
        'seatsWithDelegate': ((value.seatsWithDelegate as Array<any>).map(SeatWithDelegateToJSON)),
    };
}


