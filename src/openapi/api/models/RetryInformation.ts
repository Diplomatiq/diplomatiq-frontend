/* tslint:disable */
/* eslint-disable */
/**
 * Diplomatiq API
 * This is the OpenAPI documentation of the Diplomatiq API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Optional retry information for the client
 * @export
 * @interface RetryInformation
 */
export interface RetryInformation {
    /**
     * The client should retry `maxRetryCount` times at most
     * @type {number}
     * @memberof RetryInformation
     */
    maxRetryCount?: number;
    /**
     * The client should wait before each retry as specified by the `backoffStrategy` (see [https://github.com/Diplomatiq/resily#retrypolicy](https://github.com/Diplomatiq/resily#retrypolicy))
     * @type {string}
     * @memberof RetryInformation
     */
    backoffStrategy?: RetryInformationBackoffStrategyEnum;
    /**
     * The basis delay of the backoff in ms
     * @type {number}
     * @memberof RetryInformation
     */
    delayMs?: number;
    /**
     * If `true`, the first retry can be immediate
     * @type {boolean}
     * @memberof RetryInformation
     */
    fastFirst?: boolean;
}

export function RetryInformationFromJSON(json: any): RetryInformation {
    return RetryInformationFromJSONTyped(json, false);
}

export function RetryInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): RetryInformation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'maxRetryCount': !exists(json, 'maxRetryCount') ? undefined : json['maxRetryCount'],
        'backoffStrategy': !exists(json, 'backoffStrategy') ? undefined : json['backoffStrategy'],
        'delayMs': !exists(json, 'delayMs') ? undefined : json['delayMs'],
        'fastFirst': !exists(json, 'fastFirst') ? undefined : json['fastFirst'],
    };
}

export function RetryInformationToJSON(value?: RetryInformation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'maxRetryCount': value.maxRetryCount,
        'backoffStrategy': value.backoffStrategy,
        'delayMs': value.delayMs,
        'fastFirst': value.fastFirst,
    };
}

/**
* @export
* @enum {string}
*/
export enum RetryInformationBackoffStrategyEnum {
    Constant = 'constant',
    Linear = 'linear',
    Exponential = 'exponential',
    Jittered = 'jittered'
}


